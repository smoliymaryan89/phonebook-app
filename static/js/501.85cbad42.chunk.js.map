{"version":3,"file":"static/js/501.85cbad42.chunk.js","mappings":"2TAeMA,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,KAEJC,MAAM,qBACNC,SAAS,oCACZC,SAAUH,EAAAA,KAAaE,SAAS,iCAyElC,EAtEkB,WAChB,IAAME,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbP,MAAO,GACPE,SAAU,IAEZJ,iBAAAA,EACAU,SAAU,SAAAC,GACRN,GAASO,EAAAA,EAAAA,IAAMD,IACfJ,EAAOM,WACR,IAGH,OACE,SAAC,KAAD,CACEC,GAAG,QACHC,EAAG,GACHC,QAAQ,KACRC,EAAG,IACHC,UAAU,KACVC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAU,uBATZ,UAWE,UAAC,IAAD,CAAQC,GAAG,OAAOC,QAAS,EAAGC,YAAU,EAACf,SAAUH,EAAOmB,aAA1D,WACE,UAAC,KAAD,CACEC,YAAU,EACVC,GAAI,EACJC,UAAWtB,EAAOuB,QAAQ5B,OAASK,EAAOwB,OAAO7B,MAHnD,WAKE,SAAC,IAAD,qBACA,SAAC,EAAA8B,EAAD,CACEC,KAAK,QACLC,KAAK,QACLC,SAAU5B,EAAO6B,aACjBC,OAAQ9B,EAAO+B,WACf3B,MAAOJ,EAAOgC,OAAOrC,MACrBsC,QAAQ,SACRC,iBAAiB,gBAEnB,SAAC,KAAD,UAAmBlC,EAAOwB,OAAO7B,YAGnC,UAAC,KAAD,CACEyB,YAAU,EACVC,GAAI,EACJC,UAAWtB,EAAOuB,QAAQ1B,UAAYG,EAAOwB,OAAO3B,SAHtD,WAKE,SAAC,IAAD,wBACA,SAAC,EAAA4B,EAAD,CACEC,KAAK,WACLC,KAAK,WACLC,SAAU5B,EAAO6B,aACjBC,OAAQ9B,EAAO+B,WACf3B,MAAOJ,EAAOgC,OAAOnC,SACrBoC,QAAQ,SACRC,iBAAiB,gBAEnB,SAAC,KAAD,UAAmBlC,EAAOwB,OAAO3B,eAGnC,SAAC,IAAD,CAAQ8B,KAAK,SAAb,uBAIP,EChFD,EARkB,WAChB,OACE,+BACE,SAAC,EAAD,KAGL,C","sources":["components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { login } from 'redux/auth/authOperations';\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Input,\n  VStack,\n} from '@chakra-ui/react';\n\nconst validationSchema = yup.object({\n  email: yup\n    .string()\n    .email('Enter valid email')\n    .required('Please enter your email address.'),\n  password: yup.string().required('Please enter your password.'),\n});\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema,\n    onSubmit: value => {\n      dispatch(login(value));\n      formik.resetForm();\n    },\n  });\n\n  return (\n    <Box\n      bg=\"white\"\n      p={10}\n      rounded=\"md\"\n      w={500}\n      boxShadow=\"xl\"\n      position={'absolute'}\n      top={'50%'}\n      left={'50%'}\n      transform=\"translate(-50%, 50%)\"\n    >\n      <VStack as=\"form\" spacing={4} noValidate onSubmit={formik.handleSubmit}>\n        <FormControl\n          isRequired\n          mb={3}\n          isInvalid={formik.touched.email && formik.errors.email}\n        >\n          <FormLabel>Email</FormLabel>\n          <Input\n            name=\"email\"\n            type=\"email\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n            variant=\"filled\"\n            focusBorderColor=\"purple.400\"\n          />\n          <FormErrorMessage>{formik.errors.email}</FormErrorMessage>\n        </FormControl>\n\n        <FormControl\n          isRequired\n          mb={5}\n          isInvalid={formik.touched.password && formik.errors.password}\n        >\n          <FormLabel>Password</FormLabel>\n          <Input\n            name=\"password\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.password}\n            variant=\"filled\"\n            focusBorderColor=\"purple.400\"\n          />\n          <FormErrorMessage>{formik.errors.password}</FormErrorMessage>\n        </FormControl>\n\n        <Button type=\"submit\">Login</Button>\n      </VStack>\n    </Box>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm/LoginForm';\nimport React from 'react';\n\nconst LoginPage = () => {\n  return (\n    <>\n      <LoginForm />\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":["validationSchema","yup","email","required","password","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","value","login","resetForm","bg","p","rounded","w","boxShadow","position","top","left","transform","as","spacing","noValidate","handleSubmit","isRequired","mb","isInvalid","touched","errors","I","name","type","onChange","handleChange","onBlur","handleBlur","values","variant","focusBorderColor"],"sourceRoot":""}