{"version":3,"file":"static/js/751.c3329cf7.chunk.js","mappings":"4TAeMA,EAAmBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,KAEHE,QAAQ,kBAAmB,8BAC3BC,SAAS,qBACZC,MAAOJ,EAAAA,KAEJI,MAAM,0BACND,SAAS,sBACZE,SAAUL,EAAAA,KAEPM,IAAI,EAAG,2CACPJ,QACC,8DACA,oFAEDC,SAAS,yBACZI,gBAAiBP,EAAAA,KAEdQ,MAAM,CAACR,EAAAA,GAAQ,YAAa,MAAO,yBACnCG,SAAS,mCAqHd,EAlHqB,WACnB,IAAMM,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbZ,KAAM,GACNG,MAAO,GACPC,SAAU,GACVE,gBAAiB,IAEnBR,iBAAAA,EACAe,SAAU,YAAgC,IAA7Bb,EAA4B,EAA5BA,KAAMG,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxBI,GAASM,EAAAA,EAAAA,IAAS,CAAEd,KAAAA,EAAMG,MAAAA,EAAOC,SAAAA,KACjCM,EAAOK,WACR,IAGH,OACE,SAAC,KAAD,CACEC,GAAG,QACHC,EAAG,GACHC,QAAQ,KACRC,EAAG,IACHC,UAAU,KACVC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAU,uBATZ,UAWE,UAAC,IAAD,CAAQC,GAAG,OAAOC,QAAS,EAAGC,YAAU,EAACd,SAAUH,EAAOkB,aAA1D,WACE,UAAC,KAAD,CACEC,YAAU,EACVC,GAAI,EACJC,UAAWrB,EAAOsB,QAAQhC,MAAQU,EAAOuB,OAAOjC,KAHlD,WAKE,SAAC,IAAD,oBACA,SAAC,EAAAkC,EAAD,CACElC,KAAK,OACLmC,KAAK,OACLC,SAAU1B,EAAO2B,aACjBC,OAAQ5B,EAAO6B,WACfC,MAAO9B,EAAO+B,OAAOzC,KACrB0C,QAAQ,SACRC,iBAAiB,gBAGnB,SAAC,KAAD,UAAmBjC,EAAOuB,OAAOjC,WAGnC,UAAC,KAAD,CACE6B,YAAU,EACVC,GAAI,EACJC,UAAWrB,EAAOsB,QAAQ7B,OAASO,EAAOuB,OAAO9B,MAHnD,WAKE,SAAC,IAAD,qBACA,SAAC,EAAA+B,EAAD,CACElC,KAAK,QACLmC,KAAK,QACLC,SAAU1B,EAAO2B,aACjBC,OAAQ5B,EAAO6B,WACfC,MAAO9B,EAAO+B,OAAOtC,MACrBuC,QAAQ,SACRC,iBAAiB,gBAEnB,SAAC,KAAD,UAAmBjC,EAAOuB,OAAO9B,YAGnC,UAAC,KAAD,CACE0B,YAAU,EACVC,GAAI,EACJC,UAAWrB,EAAOsB,QAAQ5B,UAAYM,EAAOuB,OAAO7B,SAHtD,WAKE,SAAC,IAAD,wBACA,SAAC,EAAA8B,EAAD,CACElC,KAAK,WACLmC,KAAK,WACLC,SAAU1B,EAAO2B,aACjBC,OAAQ5B,EAAO6B,WACfC,MAAO9B,EAAO+B,OAAOrC,SACrBsC,QAAQ,SACRC,iBAAiB,gBAGnB,SAAC,KAAD,UAAmBjC,EAAOuB,OAAO7B,eAGnC,UAAC,KAAD,CACEyB,YAAU,EACVC,GAAI,EACJC,UACErB,EAAOsB,QAAQ1B,iBAAmBI,EAAOuB,OAAO3B,gBAJpD,WAOE,SAAC,IAAD,gCACA,SAAC,EAAA4B,EAAD,CACElC,KAAK,kBACLmC,KAAK,WACLC,SAAU1B,EAAO2B,aACjBC,OAAQ5B,EAAO6B,WACfC,MAAO9B,EAAO+B,OAAOnC,gBACrBoC,QAAQ,SACRC,iBAAiB,gBAEnB,SAAC,KAAD,UAAmBjC,EAAOuB,OAAO3B,sBAGnC,SAAC,IAAD,CAAQ6B,KAAK,SAAShB,EAAE,OAAxB,yBAMP,EC3ID,EARqB,WACnB,OACE,+BACE,SAAC,EAAD,KAGL,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { register } from 'redux/auth/authOperations';\nimport * as yup from 'yup';\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Input,\n  VStack,\n} from '@chakra-ui/react';\n\nconst validationSchema = yup.object({\n  name: yup\n    .string()\n    .matches(/^[A-Za-z\\s'-]+$/, 'Please enter a valid name.')\n    .required('Name is required!'),\n  email: yup\n    .string()\n    .email('Invalid email address.')\n    .required('Email is required!'),\n  password: yup\n    .string()\n    .min(8, 'Password must be at least 8 characters.')\n    .matches(\n      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]+$/,\n      'Password must contain at least one letter, one number, and one special character'\n    )\n    .required('Password is required!'),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Passwords must match.')\n    .required('Confirm password is required!'),\n});\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n    },\n    validationSchema,\n    onSubmit: ({ name, email, password }) => {\n      dispatch(register({ name, email, password }));\n      formik.resetForm();\n    },\n  });\n\n  return (\n    <Box\n      bg=\"white\"\n      p={10}\n      rounded=\"md\"\n      w={500}\n      boxShadow=\"xl\"\n      position={'absolute'}\n      top={'50%'}\n      left={'50%'}\n      transform=\"translate(-50%, 25%)\"\n    >\n      <VStack as=\"form\" spacing={4} noValidate onSubmit={formik.handleSubmit}>\n        <FormControl\n          isRequired\n          mb={2}\n          isInvalid={formik.touched.name && formik.errors.name}\n        >\n          <FormLabel>Name</FormLabel>\n          <Input\n            name=\"name\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.name}\n            variant=\"filled\"\n            focusBorderColor=\"purple.400\"\n          />\n\n          <FormErrorMessage>{formik.errors.name}</FormErrorMessage>\n        </FormControl>\n\n        <FormControl\n          isRequired\n          mb={2}\n          isInvalid={formik.touched.email && formik.errors.email}\n        >\n          <FormLabel>Email</FormLabel>\n          <Input\n            name=\"email\"\n            type=\"email\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n            variant=\"filled\"\n            focusBorderColor=\"purple.400\"\n          />\n          <FormErrorMessage>{formik.errors.email}</FormErrorMessage>\n        </FormControl>\n\n        <FormControl\n          isRequired\n          mb={2}\n          isInvalid={formik.touched.password && formik.errors.password}\n        >\n          <FormLabel>Password</FormLabel>\n          <Input\n            name=\"password\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.password}\n            variant=\"filled\"\n            focusBorderColor=\"purple.400\"\n          />\n\n          <FormErrorMessage>{formik.errors.password}</FormErrorMessage>\n        </FormControl>\n\n        <FormControl\n          isRequired\n          mb={3}\n          isInvalid={\n            formik.touched.confirmPassword && formik.errors.confirmPassword\n          }\n        >\n          <FormLabel>Confirm password</FormLabel>\n          <Input\n            name=\"confirmPassword\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.confirmPassword}\n            variant=\"filled\"\n            focusBorderColor=\"purple.400\"\n          />\n          <FormErrorMessage>{formik.errors.confirmPassword}</FormErrorMessage>\n        </FormControl>\n\n        <Button type=\"submit\" w=\"full\">\n          Sign up\n        </Button>\n      </VStack>\n    </Box>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\nimport React from 'react';\n\nconst RegisterPage = () => {\n  return (\n    <>\n      <RegisterForm />\n    </>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["validationSchema","yup","name","matches","required","email","password","min","confirmPassword","oneOf","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","register","resetForm","bg","p","rounded","w","boxShadow","position","top","left","transform","as","spacing","noValidate","handleSubmit","isRequired","mb","isInvalid","touched","errors","I","type","onChange","handleChange","onBlur","handleBlur","value","values","variant","focusBorderColor"],"sourceRoot":""}